apply plugin: 'com.android.application'



android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.restfriedchicken.android"
        minSdkVersion 21
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/NOTICE'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile 'org.springframework.android:spring-android-rest-template:1.0.1.RELEASE'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.3.2'
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.3.1'

}

task extractApk(type: Copy) {
    def zipFile = file("${buildDir}/outputs/apk/app-debug.apk")
    def outputDir = file("${buildDir}/outputs/apk/under-config")

    from zipTree(zipFile)
    into outputDir
}

task configApk(type: Copy, dependsOn: extractApk) {
    outputs.upToDateWhen { false }

    def env = System.getenv('ENV')

    def config = file("config/${env}/config.properties")
    def outputDir = file("${buildDir}/outputs/apk/under-config/assets/")

    from config
    into outputDir
}

task removeOldSign(type: Delete, dependsOn: configApk) {
    delete file("${buildDir}/outputs/apk/under-config/META-INF/")
}

task removeUnconfiguredApk(type: Delete, dependsOn: removeOldSign) {
    delete file("${buildDir}/outputs/apk/app-debug.apk")
}

task repackApk(type: Zip, dependsOn: removeUnconfiguredApk) {
    archiveName = "app-debug-unsigned.apk"
    destinationDir = file("${buildDir}/outputs/apk/")
    from file("${buildDir}/outputs/apk/under-config")
}
//
//gradle.projectsEvaluated {
//    extractApk.dependsOn(assembleDebug)
//}